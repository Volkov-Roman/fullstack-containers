services:
  app:
    image: todo-frontend-dev
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: todo-frontend-dev # This will name the container hello-front-dev
  server:
    image: todo-backend-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend:/usr/src/app
    working_dir: /usr/src/app
    command: npm run dev
    environment:
      - PORT=3000
      - MONGO_URL=mongodb://mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
    container_name: todo-backend-dev
  mongo:
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
  redis:
    image: redis
    ports:
      - "6379:6379"
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./redis_data:/data
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server
